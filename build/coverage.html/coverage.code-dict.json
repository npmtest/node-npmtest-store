{"/home/travis/build/npmtest/node-npmtest-store/test.js":"/* istanbul instrument in package npmtest_store */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-store/lib.npmtest_store.js":"/* istanbul instrument in package npmtest_store */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_store = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_store = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-store/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-store && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_store */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_store\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_store.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_store.rollup.js'] =\n            local.assetsDict['/assets.npmtest_store.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_store.__dirname + '/lib.npmtest_store.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/all.js":"module.exports = {\n\t'defaults':      require('./defaults'),\n\t'dump':          require('./dump'),\n\t'events':        require('./events'),\n\t'observe':       require('./observe'),\n\t'expire':        require('./expire'),\n\t'json2':         require('./json2'),\n\t'operations':    require('./operations'),\n\t'update':        require('./update'),\n\t'v1-backcompat': require('./v1-backcompat'),\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/defaults.js":"module.exports = defaultsPlugin\n\nfunction defaultsPlugin() {\n\tvar defaultValues = {}\n\t\n\treturn {\n\t\tdefaults: defaults,\n\t\tget: get\n\t}\n\t\n\tfunction defaults(_, values) {\n\t\tdefaultValues = values\n\t}\n\t\n\tfunction get(super_fn, key) {\n\t\tvar val = super_fn()\n\t\treturn (val !== undefined ? val : defaultValues[key])\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/dump.js":"module.exports = dumpPlugin\n\nfunction dumpPlugin() {\n\treturn {\n\t\tdump: dump\n\t}\n\t\n\tfunction dump(_) {\n\t\tvar res = {}\n\t\tthis.each(function(val, key) {\n\t\t\tres[key] = val\n\t\t})\n\t\treturn res\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/events.js":"var util = require('../src/util')\nvar bind = util.bind\nvar each = util.each\nvar create = util.create\nvar slice = util.slice\n\nmodule.exports = eventsPlugin\n\nfunction eventsPlugin() {\n\tvar pubsub = _newPubSub()\n\n\treturn {\n\t\twatch: watch,\n\t\tunwatch: unwatch,\n\t\tonce: once,\n\n\t\tset: set,\n\t\tremove: remove,\n\t\tclearAll: clearAll\n\t}\n\n\t// new pubsub functions\n\tfunction watch(_, key, listener) {\n\t\treturn pubsub.on(key, bind(this, listener))\n\t}\n\tfunction unwatch(_, subId) {\n\t\tpubsub.off(subId)\n\t}\n\tfunction once(_, key, listener) {\n\t\tpubsub.once(key, bind(this, listener))\n\t}\n\n\t// overwrite function to fire when appropriate\n\tfunction set(super_fn, key, val) {\n\t\tvar oldVal = this.get(key)\n\t\tsuper_fn()\n\t\tpubsub.fire(key, val, oldVal)\n\t}\n\tfunction remove(super_fn, key) {\n\t\tvar oldVal = this.get(key)\n\t\tsuper_fn()\n\t\tpubsub.fire(key, undefined, oldVal)\n\t}\n\tfunction clearAll(super_fn) {\n\t\tvar oldVals = {}\n\t\tthis.each(function(val, key) {\n\t\t\toldVals[key] = val\n\t\t})\n\t\tsuper_fn()\n\t\teach(oldVals, function(oldVal, key) {\n\t\t\tpubsub.fire(key, undefined, oldVal)\n\t\t})\n\t}\n}\n\n\nfunction _newPubSub() {\n\treturn create(_pubSubBase, {\n\t\t_id: 0,\n\t\t_subSignals: {},\n\t\t_subCallbacks: {}\n\t})\n}\n\nvar _pubSubBase = {\n\t_id: null,\n\t_subCallbacks: null,\n\t_subSignals: null,\n\ton: function(signal, callback) {\n\t\tif (!this._subCallbacks[signal]) {\n\t\t\tthis._subCallbacks[signal] = {}\n\t\t}\n\t\tthis._id += 1\n\t\tthis._subCallbacks[signal][this._id] = callback\n\t\tthis._subSignals[this._id] = signal\n\t\treturn this._id\n\t},\n\toff: function(subId) {\n\t\tvar signal = this._subSignals[subId]\n\t\tdelete this._subCallbacks[signal][subId]\n\t\tdelete this._subSignals[subId]\n\t},\n\tonce: function(signal, callback) {\n\t\tvar subId = this.on(signal, bind(this, function() {\n\t\t\tcallback.apply(this, arguments)\n\t\t\tthis.off(subId)\n\t\t}))\n\t},\n\tfire: function(signal) {\n\t\tvar args = slice(arguments, 1)\n\t\teach(this._subCallbacks[signal], function(callback) {\n\t\t\tcallback.apply(this, args)\n\t\t})\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/observe.js":"var eventsPlugin = require('./events')\n\nmodule.exports = [eventsPlugin, observePlugin]\n\nfunction observePlugin() {\n\treturn {\n\t\tobserve: observe,\n\t\tunobserve: unobserve\n\t}\n\n\tfunction observe(_, key, callback) {\n\t\tvar subId = this.watch(key, callback)\n\t\tcallback(this.get(key))\n\t\treturn subId\n\t}\n\tfunction unobserve(_, subId) {\n\t\tthis.unwatch(subId)\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/expire.js":"var namespace = 'expire_mixin'\n\nmodule.exports = expirePlugin\n\nfunction expirePlugin() {\n\tvar expirations = this.namespace(namespace)\n\t\n\treturn {\n\t\tset: expire_set,\n\t\tget: expire_get,\n\t\tremove: expire_remove\n\t}\n\t\n\tfunction expire_set(super_fn, key, val, expiration) {\n\t\tif (!this.hasNamespace(namespace)) {\n\t\t\texpirations.set(key, expiration)\n\t\t}\n\t\treturn super_fn()\n\t}\n\t\n\tfunction expire_get(super_fn, key) {\n\t\tif (!this.hasNamespace(namespace)) {\n\t\t\tvar expiration = expirations.get(key, Number.MAX_VALUE)\n\t\t\tif (expiration <= new Date().getTime()) {\n\t\t\t\tthis.remove(key)\n\t\t\t}\n\t\t}\n\t\treturn super_fn()\n\t}\n\t\n\tfunction expire_remove(super_fn, key) {\n\t\tif (!this.hasNamespace(namespace)) {\n\t\t\texpirations.remove(key)\n\t\t}\n\t\treturn super_fn()\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/operations.js":"var util = require('../src/util')\nvar slice = util.slice\nvar assign = util.assign\n\nvar updatePlugin = require('./update')\n\nmodule.exports = [updatePlugin, operationsPlugin]\n\nfunction operationsPlugin() {\n\treturn {\n\t\t// array\n\t\tpush: push,\n\t\tpop: pop,\n\t\tshift: shift,\n\t\tunshift: unshift,\n\n\t\t// obj\n\t\tassign: assign_,\n\t}\n\n\t// array\n\tfunction push(_, key, val1, val2, val3, etc) {\n\t\treturn _arrayOp.call(this, 'push', arguments)\n\t}\n\tfunction pop(_, key) {\n\t\treturn _arrayOp.call(this, 'pop', arguments)\n\t}\n\tfunction shift(_, key) {\n\t\treturn _arrayOp.call(this, 'shift', arguments)\n\t}\n\tfunction unshift(_, key, val1, val2, val3, etc) {\n\t\treturn _arrayOp.call(this, 'unshift', arguments)\n\t}\n\n\t// obj\n\tfunction assign_(_, key, props1, props2, props3, etc) {\n\t\tvar varArgs = slice(arguments, 2)\n\t\treturn this.update(key, {}, function(val) {\n\t\t\tif (typeof val != 'object') {\n\t\t\t\tthrow new Error('store.assign called for non-object value with key \"'+key+'\"')\n\t\t\t}\n\t\t\tvarArgs.unshift(val)\n\t\t\treturn assign.apply(Object, varArgs)\n\t\t})\n\t}\n\n\t// internal\n\t///////////\n\tfunction _arrayOp(arrayFn, opArgs) {\n\t\tvar res\n\t\tvar key = opArgs[1]\n\t\tvar rest = slice(opArgs, 2)\n\t\tthis.update(key, [], function(arrVal) {\n\t\t\tres = Array.prototype[arrayFn].apply(arrVal, rest)\n\t\t})\n\t\treturn res\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/update.js":"module.exports = updatePlugin\n\nfunction updatePlugin() {\n\treturn {\n\t\tupdate: update\n\t}\n\t\n\tfunction update(_, key, optDefaultVal, updateFn) {\n\t\tif (arguments.length == 3) {\n\t\t\tupdateFn = optDefaultVal\n\t\t\toptDefaultVal = undefined\n\t\t}\n\t\tvar val = this.get(key, optDefaultVal)\n\t\tvar retVal = updateFn(val)\n\t\tthis.set(key, retVal != undefined ? retVal : val)\n\t}\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/plugins/v1-backcompat.js":"var dumpPlugin = require('./dump')\nvar json2Plugin = require('./json2')\n\nmodule.exports = [dumpPlugin, json2Plugin, v1BackcompatPlugin]\n\nfunction v1BackcompatPlugin() {\n\tthis.disabled = !this.enabled\n\treturn {\n\t\thas: backcompat_has,\n\t\ttransact: backcompat_transact,\n\t\tclear: backcompat_clear,\n\t\tforEach: backcompat_forEach,\n\t\tgetAll: backcompat_getAll,\n\t\tserialize: backcompat_serialize,\n\t\tdeserialize: backcompat_deserialize,\n\t}\n}\n\nfunction backcompat_has(_, key) {\n\treturn this.get(key) !== undefined\n}\nfunction backcompat_transact(_, key, defaultVal, transactionFn) {\n\tif (transactionFn == null) {\n\t\ttransactionFn = defaultVal\n\t\tdefaultVal = null\n\t}\n\tif (defaultVal == null) {\n\t\tdefaultVal = {}\n\t}\n\tvar val = this.get(key, defaultVal)\n\tvar ret = transactionFn(val)\n\tthis.set(key, ret === undefined ? val : ret)\n}\nfunction backcompat_clear(_) {\n\treturn this.clearAll.call(this)\n}\nfunction backcompat_forEach(_, fn) {\n\treturn this.each.call(this, function(val, key) {\n\t\tfn(key, val)\n\t})\n}\nfunction backcompat_getAll(_) {\n\treturn this.dump.call(this)\n}\nfunction backcompat_serialize(_, value) {\n\treturn JSON.stringify(value)\n}\nfunction backcompat_deserialize(_, value) {\n\tif (typeof value != 'string') { return undefined }\n\ttry { return JSON.parse(value) }\n\tcatch(e) { return value || undefined }\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/scripts/create-tunnel.js":"var port = 9575\nvar tunnel = require('./saucelabs/tunnel')\n\ntunnel.setup(port, 'storejs', function(err, url) {\n\tif (err) { throw err }\n\tconsole.log(\"Tunnel up and running at\", url)\n})\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/scripts/saucelabs/tunnel.js":"var http = require('http')\nvar fs = require('fs')\nvar ngrok = require('ngrok')\n\nmodule.exports = {\n\tsetup: setup,\n}\n\nfunction setup(port, subdomain, callback) {\n\tstartServer(port, function(err) {\n\t\tif (err) { return callback(err) }\n\t\tconsole.log(\"Creating tunnel - this might take a few seconds\")\n\t\tstartTunnel(port, subdomain, function(err, url) {\n\t\t\tif (err) { return callback(err) }\n\t\t\tconsole.log(\"tunnel up at\", url)\n\t\t\tcallback(null, url)\n\t\t})\n\t})\n}\n\nfunction startTunnel(port, subdomain, callback) {\n\t// return callback(null, 'https://07f51ed4.ngrok.io')\n\tvar authtoken = new Buffer('NTJuelB1dUpVSDNycDNjZ3pldHVEXzVnWlNObkpuMlFaR013WjZ0eUZUQw==', 'base64').toString('utf8')\n\tngrok.connect({ addr:port, subdomain:subdomain, authtoken:authtoken }, function(err, url) {\n\t\tif (err) { return callback(err) }\n\t\turl = url.replace('https:', 'http:')\n\t\tcallback(null, url)\n\t})\n}\n\nfunction startServer(port, callback) {\n\tvar server = http.createServer(handleReq)\n\tserver.listen(port)\n\tserver.on('listening', function(err) {\n\t\tif (err) { return callback(err) }\n\t\tconsole.log('local server listening on http://localhost:'+port+'/')\n\t\tcallback()\n\t})\n\t\n\tfunction handleReq(req, res) {\n\t\tconsole.log(req.url)\n\t\tif (req.url == '/') {\n\t\t\tres.writeHead(200, { 'Content-Type':'text/html' })\n\t\t\tres.end(testRunnerHTML)\n\n\t\t} else if (req.url == '/store.tests.min.js') {\n\t\t\tvar headers = {\n\t\t\t\t'Content-Type':'application/javascript',\n\t\t\t\t'Cache-Control': 'no-cache, no-store, must-revalidate',\n\t\t\t\t'Pragma': 'no-cache',\n\t\t\t\t'Expires': '0'\n\t\t\t}\n\t\t\tres.writeHead(200, headers)\n\t\t\tfs.createReadStream(__dirname+'/../../dist/store.tests.min.js').pipe(res)\n\n\t\t} else {\n\t\t\tres.writeHead(404)\n\t\t\tres.end('Not found')\n\t\t}\n\t}\n\t\n\tvar testRunnerHTML = `\n\t\t<!doctype html>\n\t\t<head>\n\t\t\t<title>store.js test runner</title>\n\t\t</head>\n\t\t<body>\n\t\t\t<h1>store.js test runner</h1>\n\t\t\t<script src=\"/store.tests.min.js\"></script>\n\t\t</body>\n\t\t</html>\n\t`.replace(/\\n\\t\\t/g, '\\n').replace(/^\\n/, '')\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/scripts/saucelabs/list-supported-browsers.js":"#!/usr/local/bin/node\n\nvar username = 'storejs'\nvar password = new Buffer('ZjhjMzUyNjgtNzc2ZC00ZjlkLWEwNWUtN2FkM2Q0ZDgyNzk5', 'base64').toString('utf8')\nvar saucelabs = require('./saucelabs')\n\nsaucelabs.setAuth(username, password)\nsaucelabs.listAllSupportedPlatforms(function(err, res) {\n\tif (err) { throw err }\n\tfor (var i=0; i<res.length; i++) {\n\t\tconsole.log(res[i])\n\t}\n})\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/scripts/saucelabs/saucelabs.js":"var _ = require('lodash')\nvar api = require('./saucelabs-api')\n\nmodule.exports = {\n\tsetAuth: api.setAuth,\n\tlistAllSupportedPlatforms: listAllSupportedPlatforms,\n\trunTest: runTest,\n\tplatformSets: require('./saucelabs-platformSets'),\n}\n\nfunction listAllSupportedPlatforms(callback) {\n\tapi.get('info/platforms/webdriver', function(platformsInfo) {\n\t\tvar platforms = _.map(platformsInfo, function(info) {\n\t\t\treturn [info['os'], info['api_name'], info['short_version']]\n\t\t})\n\t\tplatforms.sort(function(a, b) {\n\t\t\ta = a.join('-')\n\t\t\tb = b.join('-')\n\t\t\treturn a < b ? -1 : b < a ? 1 : 0\n\t\t})\n\t\tcallback(null, filterUniquePlatforms(platforms))\n\t})\n}\n\nfunction runTests(url, platforms, callback) {\n\tvar params = { maxDuration:1800, url:url, platforms:platforms, framework:'custom', recordVideo:false, recordScreenshots:false, recordLogs:true }\n\tapi.post('js-tests', params, callback)\n}\n\nfunction getPlatformId(platform) {\n\treturn platform.join('-')\n\t\t.replace('OS X', 'Mac')\n\t\t.replace('Windows XP', 'Windows 2003')\n\t\t.replace('Windows 7', 'Windows 2008')\n\t\t.replace('Windows 8', 'Windows 2012')\n}\n\nfunction filterUniquePlatforms(platforms) {\n\tvar seen = {}\n\treturn _.filter(platforms, function(platform) {\n\t\tvar platformId = getPlatformId(platform)\n\t\tif (seen[platformId]) { return false }\n\t\tseen[platformId] = true\n\t\treturn true\n\t})\n}\n\nfunction runTest(url, platformSets, callback) {\n\tgetPlatformsArg(platformSets, function(platforms) {\n\t\tvar runTestsRes\n\t\trunTests(url, platforms, function(res) {\n\t\t\trunTestsRes = res\n\t\t\tloopCheckStatus()\n\t\t})\n\t\tfunction loopCheckStatus() {\n\t\t\tgetTestsStatus(runTestsRes, function(res) {\n\t\t\t\tvar pending = []\n\t\t\t\tvar passed = []\n\t\t\t\tvar failed = []\n\t\t\t\t_.each(res['js tests'], function(test) {\n\t\t\t\t\tvar status = getTestStatus(test)\n\t\t\t\t\tif (status == PENDING) { pending.push(test) }\n\t\t\t\t\telse if (status == PASSED) { passed.push(test) }\n\t\t\t\t\telse if (status == FAILED) { failed.push(test) }\n\t\t\t\t\telse { throw new Error('Bad status') }\n\t\t\t\t})\n\t\t\t\t_.each(_.flatten([passed, pending, failed]), function(test) {\n\t\t\t\t\tconsole.log(getTestStatus(test), test.id, test.status, test.platform)\n\t\t\t\t})\n\t\t\t\tif (pending.length == 0) {\n\t\t\t\t\tconsole.log(\"Test suite completed\")\n\t\t\t\t\tcallback(checkTestResults(res))\n\t\t\t\t} else if (res.completed) {\n\t\t\t\t\tthrow new Error('No pending tests, but res.completed == true')\n\t\t\t\t} else {\n\t\t\t\t\tvar delay = 5\n\t\t\t\t\tconsole.log(\"Check again in\", delay, \"seconds\")\n\t\t\t\t\tsetTimeout(loopCheckStatus, delay * 1000)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t})\n}\n\nfunction getPlatformsArg(platformSets, callback) {\n\tlistAllSupportedPlatforms(function(err, supportedPlatforms) {\n\t\tif (err) { return callback(err) }\n\t\tvar allSupportedPlatforms = {}\n\t\t_.each(supportedPlatforms, function(platform) {\n\t\t\tallSupportedPlatforms[getPlatformId(platform)] = true\n\t\t})\n\t\t\n\t\tvar platforms = _.flatten(_.flatten(_.flatten(\n\t\t\t_.map(platformSets, function(platformSet) {\n\t\t\t\treturn _.map(platformSet, function(browserSpecs, osName) {\n\t\t\t\t\treturn _.map(browserSpecs, function(browserVersions, browserName) {\n\t\t\t\t\t\tif (typeof browserVersions == 'string') {\n\t\t\t\t\t\t\tbrowserVersions = [browserVersions]\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn _.map(browserVersions, function(browserVersion) {\n\t\t\t\t\t\t\treturn [osName, browserName, browserVersion]\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t)))\n\t\t\n\t\t_.each(platforms, function(platform) {\n\t\t\tif (!platform[2]) { return } // Don't sanity-check CURRENT_VERSION\n\t\t\tvar platformId = getPlatformId(platform)\n\t\t\tif (!allSupportedPlatforms[platformId]) {\n\t\t\t\tthrow new Error('Unsupported platform: '+platform.join(', ')+' ('+platformId+')')\n\t\t\t}\n\t\t})\n\t\t\n\t\tcallback(filterUniquePlatforms(platforms))\n\t})\n}\n\nfunction getTestsStatus(runTestsRes, callback) {\n\tapi.post('js-tests/status', { 'js tests':runTestsRes['js tests'] }, function(res) {\n\t\tcallback(res)\n\t})\n}\n\nvar PENDING = 'PENDING'\nvar FAILED  = 'FAILED '\nvar PASSED  = 'PASSED '\nfunction getTestStatus(test) {\n\tif (test.status == 'test error') {\n\t\treturn FAILED\n\t} else if (test.result) {\n\t\treturn (test.result.failed ? FAILED : PASSED)\n\t} else {\n\t\treturn PENDING\n\t}\n}\n\nfunction checkTestResults(res) {\n\tvar failed = 0\n\t_.each(res['js tests'], function(test) {\n\t\tconsole.log(getTestStatus(test), test.id, test.status, test.platform, test.url)\n\t\tif (getTestStatus(test) == FAILED) {\n\t\t\tfailed += 1\n\t\t\tconsole.log('Result:', test.result)\n\t\t}\n\t})\n\treturn (failed ? failed+' tests failed' : null)\n}\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/scripts/saucelabs/saucelabs-api.js":"var request = require('request')\n\nmodule.exports = {\n\tsetAuth: setAuth,\n\tget: get,\n\tpost: post\n}\n\nvar auth = {\n\tuser: null,\n\tpassword: null,\n}\n\nfunction setAuth(saucelabsUsername, saucelabsToken) {\n\tauth.user = saucelabsUsername\n\tauth.password = saucelabsToken\n}\n\n\nfunction get(path, callback) {\n\tvar params = {\n\t\turl: 'https://saucelabs.com/rest/v1/'+path,\n\t\tauth: auth\n\t}\n\t// console.log(\"REQ\", params)\n\trequest.get(params, function(err, res, body) {\n\t\tif (err) {\n\t\t\tthrow err\n\t\t}\n\t\tif (res.statusCode != 200) {\n\t\t\tconsole.log(params)\n\t\t\tthrow new Error('Non-200 status code: '+body)\n\t\t}\n\t\t// console.log(\"RES\", params.url, body)\n\t\tcallback(JSON.parse(body))\n\t})\n}\n\n\nfunction post(path, data, callback) {\n\tvar params = {\n\t\turl: 'https://saucelabs.com/rest/v1/'+auth.user+'/'+path,\n\t\tauth: { user:auth.user, password:auth.password },\n\t\tjson: data\n\t}\n\t// console.log(\"REQ\", params)\n\trequest.post(params, function(err, res, body) {\n\t\tif (err) {\n\t\t\tthrow err\n\t\t}\n\t\tif (res.statusCode != 200) {\n\t\t\tthrow new Error('Non-200 status code: '+body)\n\t\t}\n\t\t// console.log(\"RES\", params.url, body)\n\t\tcallback(body)\n\t})\n}\n\n// https://wiki.saucelabs.com/display/DOCS/JavaScript+Unit+Testing+Methods#JavaScriptUnitTestingMethods-StartJSUnitTests\n","/home/travis/build/npmtest/node-npmtest-store/node_modules/store/scripts/saucelabs/saucelabs-platformSets.js":"// See https://wiki.saucelabs.com/display/DOCS/Platform+Configurator?_ga=1.24059122.934400320.1451142104#/\n// See ./list-saucelabs-platforms.js\nvar CURRENT_VERSION = ''\nvar BETA_VERSION = 'beta'\nvar CHROME_VERSIONS = ['31', CURRENT_VERSION]\nvar FIREFOX_VERSIONS = ['4', '5', '6', '7', CURRENT_VERSION]\nvar OPERA_VERSIONS = ['11', '12']\n\nvar platforms = module.exports = {\n\t// Fast trial runs\n\t//////////////////\n\tfast: {\n\t\t'Linux': { 'chrome': [CURRENT_VERSION] },\n\t},\n\n\t// Common browser sets\n\t//////////////////////\n\tie: {\n\t\t'Windows XP': { 'internet explorer': ['6', '7', '8'] },\n\t\t'Windows 7': { 'internet explorer': ['9'] },\n\t\t'Windows 8': { 'internet explorer': ['10'] },\n\t\t'Windows 10': { 'internet explorer': ['11'], 'microsoftedge': [CURRENT_VERSION] },\n\t},\n\tsafari: {\n\t\t'Windows 7': { 'safari': ['5'] },\n\t\t'OS X 10.8': { 'safari': ['6'] },\n\t\t'OS X 10.9': { 'safari': ['7'] },\n\t\t'OS X 10.10': { 'safari': ['8'] },\n\t\t'OS X 10.11': { 'safari': ['9'] },\n\t\t'OS X 10.12': { 'safari': ['10'] },\n\t},\n\tfirefox: {\n\t\t'Linux': { 'firefox': ['40'] },\n\t\t'Windows XP': { 'firefox': ['4', '5'] },\n\t\t'Windows 10': { 'firefox': [CURRENT_VERSION] },\n\t\t'Mac 10.12': { 'firefox': [CURRENT_VERSION] },\n\t},\n\tandroid: {\n\t\t'Linux': { 'android': ['4.4','5.0','5.1'] },\n\t},\n\tios: {\n\t\t'Mac 10.10': {\n\t\t\t'ipad':  ['8.4'],\n\t\t\t'iphone':['8.4'],\n\t\t},\n\t\t'Mac 10.11': {\n\t\t\t'ipad':  ['9.3', '10.0'],\n\t\t\t'iphone':['9.3', '10.0'],\n\t\t}\n\t},\n\tchrome: {\n\t\t'Mac 10.12': { 'chrome':['27', CURRENT_VERSION] },\n\t\t'Windows 10': { 'chrome':['26', CURRENT_VERSION] },\n\t},\n\topera: {\n\t\t'Windows XP': { 'opera':'11' },\n\t\t'Linux': { 'opera':'12' },\n\t},\n\n\t// Individual browser versions\n\t//////////////////////////////\n\tie6: { 'Windows XP': { 'internet explorer': ['6'] } },\n\tie7: { 'Windows XP': { 'internet explorer': ['7'] } },\n\tie8: { 'Windows XP': { 'internet explorer': ['8'] } },\n\tie9: { 'Windows 7':  { 'internet explorer': ['9'] } },\n\tie10:{ 'Windows 8':  { 'internet explorer': ['10'] } },\n\tie11:{ 'Windows 10': { 'internet explorer': ['11'] } },\n\n\tfirefox4: { 'Windows XP': { 'firefox': ['4'] } },\n\tfirefox5: { 'Windows XP': { 'firefox': ['5'] } },\n}\n"}